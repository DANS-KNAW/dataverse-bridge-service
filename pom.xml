<!--

    Copyright (C) 2018 DANS - Data Archiving and Networked Services (info@dans.knaw.nl)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>nl.knaw.dans.shared</groupId>
    <artifactId>dans-java-project</artifactId>
    <version>2.1.5</version>
  </parent>

  <groupId>nl.knaw.dans.bridge.service</groupId>
  <artifactId>bridge-service</artifactId>
  <packaging>jar</packaging>
  <name>bridge-service</name>
  <version>1.0</version>
  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.jar.plugin>3.1.0</maven.jar.plugin>
    <mvn.resources.plugin.version>3.1.0</mvn.resources.plugin.version>
    <mvn.assembly.plugin.version>2.4.1</mvn.assembly.plugin.version>
    <springfox.version>2.7.0</springfox.version>
    <springboot.dependencies.version>2.1.0.RELEASE</springboot.dependencies.version>
    <springboot.stater.test.version>1.5.3.RELEASE</springboot.stater.test.version>

    <saxon.he.version>9.8.0-14</saxon.he.version>
    <hsql.db.version>2.4.1</hsql.db.version>
    <rxjava.version>2.2.0</rxjava.version>
    <json.version>20090211</json.version>
    <javax.json.version>1.0.4</javax.json.version>
    <mvn.compiler.version>3.7.0</mvn.compiler.version>
    <joda.version>2.9.9</joda.version>
    <bagit.version>4.12.0</bagit.version>
    <abdera.core.version>1.1.3</abdera.core.version>
    <abdera.parser.version>1.1.3</abdera.parser.version>
    <lingala.zip4j.version>1.3.2</lingala.zip4j.version>
    <apache.httpclient.version>4.5</apache.httpclient.version>
    <commons.lang.version>3.7</commons.lang.version>
    <commons.codec.version>1.9</commons.codec.version>
    <commons.io.version>2.6</commons.io.version>
    <bridge.service.main.class>nl.knaw.dans.bridge.service.BridgeService</bridge.service.main.class>
    <bridge.plugin.lib.version>1.0</bridge.plugin.lib.version>
    <docker.image.prefix>bridge</docker.image.prefix>
    <docker.image.name>service</docker.image.name>
    <maven.build.timestamp.format>yyMMdd_HHmm</maven.build.timestamp.format>
    <buildNumber>${maven.build.timestamp}</buildNumber>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
  </properties>
  <build>
    <finalName>bridge-service</finalName>
    <sourceDirectory>src/main/java</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.3.6</version>
        <configuration>
          <repository>${docker.image.prefix}/${docker.image.name}</repository>
          <buildArgs>
            <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
            <APP_PROP>config/application-docker.properties</APP_PROP>
            <APP_LIB>target/lib</APP_LIB>
          </buildArgs>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>${bridge.service.main.class}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${mvn.resources.plugin.version}</version>
        <executions>
          <execution>
            <id>copy-config-jar</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <encoding>UTF-8</encoding>
              <outputDirectory>${basedir}/dist/bridge-service-${project.version}-${buildNumber}/</outputDirectory>
              <resources>
                <resource>
                  <directory>target</directory>
                  <filtering>false</filtering>
                  <includes>
                    <include>${project.name}.zip</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin}</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>${bridge.service.main.class}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${license-maven-plugin.version}</version>
        <configuration>
          <excludes combine.children="append">
            <!-- extra excludes needed -->
            <exclude>dist/**</exclude>
            <exclude>database/*</exclude>
            <exclude>bags/*</exclude>
            <exclude>logs/*</exclude>
            <exclude>mvnw</exclude>
            <exclude>.mvn/wrapper/maven-wrapper.properties</exclude>
            <exclude>.swagger-codegen/*</exclude>
            <exclude>.swagger-codegen-ignore</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${springboot.dependencies.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- Needed this hibernate-core, because dans parent pom results in older version: 4.3.11.Final -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>5.3.7.Final</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <version>${springboot.stater.test.version}</version>
    </dependency>
    <dependency>
      <groupId>nl.knaw.dans.bridge.plugin.lib</groupId>
      <artifactId>bridge-plugin-lib</artifactId>
      <version>${bridge.plugin.lib.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>${hsql.db.version}</version>
      <scope>runtime</scope>
    </dependency>
    <!--SpringFox dependencies -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>${springfox.version}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>${springfox.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <!-- Bean Validation API support -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons.lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons.codec.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${apache.httpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>net.lingala.zip4j</groupId>
      <artifactId>zip4j</artifactId>
      <version>${lingala.zip4j.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.abdera/abdera-core -->
    <dependency>
      <groupId>org.apache.abdera</groupId>
      <artifactId>abdera-core</artifactId>
      <version>${abdera.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.abdera</groupId>
      <artifactId>abdera-parser</artifactId>
      <version>${abdera.parser.version}</version>
    </dependency>
    <dependency>
      <groupId>gov.loc</groupId>
      <artifactId>bagit</artifactId>
      <version>${bagit.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <version>${saxon.he.version}</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda.version}</version>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>${json.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <version>${javax.json.version}</version>
    </dependency>
    <dependency>
      <groupId>io.reactivex.rxjava2</groupId>
      <artifactId>rxjava</artifactId>
      <version>${rxjava.version}</version>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>DANS</id>
      <releases>
        <enabled>true</enabled>
      </releases>
      <url>http://maven.dans.knaw.nl/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>DANS</id>
      <releases>
        <enabled>true</enabled>
      </releases>
      <url>http://maven.dans.knaw.nl/</url>
    </pluginRepository>
  </pluginRepositories>
</project>
